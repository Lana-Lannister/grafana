/*Package api contains base API implementation of unified alerting
 *
 *Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 *
 *Do not manually edit these files, please find ngalert/api/swagger-codegen/ for commands on how to generate them.
 */
package api

import (
	"net/http"

	"github.com/grafana/grafana/pkg/api/response"
	"github.com/grafana/grafana/pkg/api/routing"
	"github.com/grafana/grafana/pkg/middleware"
	"github.com/grafana/grafana/pkg/models"
	"github.com/grafana/grafana/pkg/services/ngalert/metrics"
)

type RuleRouter interface {
	RouteGetRule(*models.ReqContext) response.Response
	RouteCreateRule(*models.ReqContext) response.Response
	RouteUpdateRule(*models.ReqContext) response.Response
	RouteDeleteRule(*models.ReqContext) response.Response
}

func (api *API) RegisterRuleEndpoints(router RuleRouter, m *metrics.API) {
	api.RouteRegister.Group("", func(group routing.RouteRegister) {
		group.Get(
			toMacaronPath("/api/alerting/rules/{uid}"),
			metrics.Instrument(
				http.MethodGet,
				"/api/alerting/rules/{uid}",
				router.RouteGetRule,
				m,
			),
		)
		group.Post(
			toMacaronPath("/api/alerting/rules"),
			metrics.Instrument(
				http.MethodPost,
				"/api/alerting/rules",
				router.RouteCreateRule,
				m,
			),
		)
		group.Put(
			toMacaronPath("/api/alerting/rules"),
			metrics.Instrument(
				http.MethodPut,
				"/api/alerting/rules",
				router.RouteUpdateRule,
				m,
			),
		)
		group.Delete(
			toMacaronPath("/api/alerting/rules/{uid}"),
			metrics.Instrument(
				http.MethodDelete,
				"/api/alerting/rules/{uid}",
				router.RouteDeleteRule,
				m,
			),
		)
	}, middleware.ReqSignedIn)
}
